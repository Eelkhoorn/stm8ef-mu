ARM directory README. 22-feb-2000.
----------------------------------

This README will eventually describe a very cool cross-compilation
environment for the ARM (Advanced Risc Machine) processors. Right now it's
pretty skeletal, but I wanted to mention a few things.

To see what can be done, cd back up to `dforth' and type `./dforth arm'.
The file `arm' will load the basic cross-compiler (what of it exists thus
far) and compile some sample assembler code (from the file `asm-test'). To
see what it has done type `ram-start du' to dump the image memory. As
documented in `dforth/README', various keys move around in memory and
switch between dumping memory and disassembling instructions. Try it!

The assembler is quirky and backwards, like all Forth assemblers; I had to
re-arrange the operands slightly to make it less confusing to go back and
forth between ARM's examples and documentation (and the disassembled code,
with is in ARM format) and the Forth assembler input. Look in `asm.d4' for
details.

With a little work it should be possible to load a small file of ARM
assembler instructions, write the image memory as a binary file, and then
run `uuencode' on it to download it to the AEB-1. Or, I could figure out
how to do `uuencode' inside DForth and do it that way.

Someday this, and much more (JTAG debug!) will all work!

- David
