2010-jul-26

This directory contains primitive support for the creation of small bitmaps,
initially for use in my SpokenWord project, but moved out of target/HC08 so
that I can experiment with creating font files suitable for loading into a
Linux or BSD console. This way I can see what my handiwork looks like!

The SpokenWord project is about exploiting human persistence of vision in order
to spell words and make simple patterns within the rotating wheel of a bicycle.
This isn't a new idea, but I'm doing it my way, and along the way it's an
excuse to draw some bitmap fonts - which have fascinated me since childhood.

By its nature, SpokenWord requires the bitmaps to be "serialised" in a
different direction than the bitmaps for a console font. The SpokenWord
hardware is a "vertical" (rotating) column of pixels that writes text into thin
air as the wheel rotates. Its method of scanning - a column at a time - is
closely akin to how old-skool impact ("pin-head") printers work(ed): a vertical
head of several (8 to 24) pins moved sideways while the pins were activated by
solenoids. SpokenWord simply substitutes LEDs.

I ran across a clever method in the 80s (courtesy of the folks from MMS, who
made a Forth system back then) for cleverly "encoding" fonts in code. Basically
you draw the characters using a small set of 1-character Forth words, and
line-by-line the raster (bitmap) data is stored into memory. I used this method
on a project with Trimpin to spell words in falling water!

For generating console font bitmaps, which are scanned horizontally, we do the
same thing. For SpokenWord, however, we need to encode "vertical" (column-wise)
bitmaps, so we use a variation.

Because I want to use both methods, I've separated the bitmaps from the bitmap
compilers, and the compilers from each other.
