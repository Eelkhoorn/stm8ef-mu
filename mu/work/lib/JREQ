.ifndef (JREQ)

: (JREQ) ;

loading JREQ relative addressing
-- Compile JREQ

target-compiler

-- backward branch, push mark adress on the stack
: [M  \tc begin \tc [ ; 

: THEN ( a -- )
	\m here over - swap 1 -  \m c!
;

: ELSE ( a -- a )
	$2000 \m , \m here swap  \tc THEN
;

meta

: JREQ ( F:Z -- )	-- jump if Z flag of CC is set
	$2700 \m , \m here
;

: >REL ( -- a )
	0 \m c, \m here 
;

-- like "c A@ < IF" with relative addressing
: ]A<IF ( c -- )
	$A1 \m c, ( c ) \m c, $2A \m c, \m ] \m >REL 	-- CP A,#c  JRPL rel
;

: ]B@IF ( -- ) 2* $7201 + \m , \m , \m ] \m >REL ;  -- BTJF  a,#bit,rel

: ]@IF  ( -- ) $90CE \m , \m , ( LDW Y,a ) \m ] \m JREQ ;

: ]C@IF ( -- ) $C6 \m c, \m ,  ( LD  A,a ) \m ] \m JREQ ;

-- compile relative address to mark
: ]<M \m here - 1 - \m c, \m ] ;

-- wait until bit reset
: ]BRU ( reg bit ) 2* $7200 + \m , \m , \m ]<M ;

-- wait until bit set
: ]BSU ( reg bit ) 2* $7201 + \m , \m , \m ]<M ;

.then
