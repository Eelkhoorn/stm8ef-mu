.ifndef (FONT5X8)

: (FONT5X8) ;

__meta

-- Font 5x8 ASCII 33..126 (add a 0 column for 6x8 matrix)

here constant FONT5X8
    $00 c, $06 c, $5F c, $06 c, $00 c,   -- !
    $07 c, $03 c, $00 c, $07 c, $03 c,   -- "
    $24 c, $7E c, $24 c, $7E c, $24 c,   -- #
    $24 c, $2B c, $6A c, $12 c, $00 c,   -- $
    $63 c, $13 c, $08 c, $64 c, $63 c,   -- %
    $36 c, $49 c, $56 c, $20 c, $50 c,   -- &
    $00 c, $07 c, $03 c, $00 c, $00 c,   -- '
    $00 c, $3E c, $41 c, $00 c, $00 c,   -- (
    $00 c, $41 c, $3E c, $00 c, $00 c,   -- )
    $08 c, $3E c, $1C c, $3E c, $08 c,   -- *
    $08 c, $08 c, $3E c, $08 c, $08 c,   -- +
    $00 c, $E0 c, $60 c, $00 c, $00 c,   -- ,
    $08 c, $08 c, $08 c, $08 c, $08 c,   -- -
    $00 c, $60 c, $60 c, $00 c, $00 c,   -- .
    $20 c, $10 c, $08 c, $04 c, $02 c,   -- /
    $3E c, $51 c, $49 c, $45 c, $3E c,   -- 0
    $00 c, $42 c, $7F c, $40 c, $00 c,   -- 1
    $62 c, $51 c, $49 c, $49 c, $46 c,   -- 2
    $22 c, $49 c, $49 c, $49 c, $36 c,   -- 3
    $18 c, $14 c, $12 c, $7F c, $10 c,   -- 4
    $2F c, $49 c, $49 c, $49 c, $31 c,   -- 5
    $3C c, $4A c, $49 c, $49 c, $30 c,   -- 6
    $01 c, $71 c, $09 c, $05 c, $03 c,   -- 7
    $36 c, $49 c, $49 c, $49 c, $36 c,   -- 8
    $06 c, $49 c, $49 c, $29 c, $1E c,   -- 9
    $00 c, $6C c, $6C c, $00 c, $00 c,   -- :
    $00 c, $EC c, $6C c, $00 c, $00 c,   -- ;
    $08 c, $14 c, $22 c, $41 c, $00 c,   -- <
    $24 c, $24 c, $24 c, $24 c, $24 c,   -- =
    $00 c, $41 c, $22 c, $14 c, $08 c,   -- >
    $02 c, $01 c, $59 c, $09 c, $06 c,   -- ?
    $3E c, $41 c, $5D c, $55 c, $1E c,   -- @
    $7E c, $11 c, $11 c, $11 c, $7E c,   -- A
    $7F c, $49 c, $49 c, $49 c, $36 c,   -- B
    $3E c, $41 c, $41 c, $41 c, $22 c,   -- C
    $7F c, $41 c, $41 c, $41 c, $3E c,   -- D
    $7F c, $49 c, $49 c, $49 c, $41 c,   -- E
    $7F c, $09 c, $09 c, $09 c, $01 c,   -- F
    $3E c, $41 c, $49 c, $49 c, $7A c,   -- G
    $7F c, $08 c, $08 c, $08 c, $7F c,   -- H
    $00 c, $41 c, $7F c, $41 c, $00 c,   -- I
    $30 c, $40 c, $40 c, $40 c, $3F c,   -- J
    $7F c, $08 c, $14 c, $22 c, $41 c,   -- K
    $7F c, $40 c, $40 c, $40 c, $40 c,   -- L
    $7F c, $02 c, $04 c, $02 c, $7F c,   -- M
    $7F c, $02 c, $04 c, $08 c, $7F c,   -- N
    $3E c, $41 c, $41 c, $41 c, $3E c,   -- O
    $7F c, $09 c, $09 c, $09 c, $06 c,   -- P
    $3E c, $41 c, $51 c, $21 c, $5E c,   -- Q
    $7F c, $09 c, $09 c, $19 c, $66 c,   -- R
    $26 c, $49 c, $49 c, $49 c, $32 c,   -- S
    $01 c, $01 c, $7F c, $01 c, $01 c,   -- T
    $3F c, $40 c, $40 c, $40 c, $3F c,   -- U
    $1F c, $20 c, $40 c, $20 c, $1F c,   -- V
    $3F c, $40 c, $3C c, $40 c, $3F c,   -- W
    $63 c, $14 c, $08 c, $14 c, $63 c,   -- X
    $07 c, $08 c, $70 c, $08 c, $07 c,   -- Y
    $71 c, $49 c, $45 c, $43 c, $00 c,   -- Z
    $00 c, $7F c, $41 c, $41 c, $00 c,   -- [
    $02 c, $04 c, $08 c, $10 c, $20 c,   -- \
    $00 c, $41 c, $41 c, $7F c, $00 c,   -- ]
    $04 c, $02 c, $01 c, $02 c, $04 c,   -- ^
    $80 c, $80 c, $80 c, $80 c, $80 c,   -- _
    $00 c, $03 c, $07 c, $00 c, $00 c,   -- `
    $20 c, $54 c, $54 c, $54 c, $78 c,   -- a
    $7F c, $44 c, $44 c, $44 c, $38 c,   -- b
    $38 c, $44 c, $44 c, $44 c, $28 c,   -- c
    $38 c, $44 c, $44 c, $44 c, $7F c,   -- d
    $38 c, $54 c, $54 c, $54 c, $08 c,   -- e
    $08 c, $7E c, $09 c, $09 c, $00 c,   -- f
    $18 c, $A4 c, $A4 c, $A4 c, $7C c,   -- g
    $7F c, $04 c, $04 c, $78 c, $00 c,   -- h
    $00 c, $00 c, $7D c, $40 c, $00 c,   -- i
    $40 c, $80 c, $84 c, $7D c, $00 c,   -- j
    $7F c, $10 c, $28 c, $44 c, $00 c,   -- k
    $00 c, $00 c, $7F c, $40 c, $00 c,   -- l
    $7C c, $04 c, $18 c, $04 c, $78 c,   -- m
    $7C c, $04 c, $04 c, $78 c, $00 c,   -- n
    $38 c, $44 c, $44 c, $44 c, $38 c,   -- o
    $FC c, $44 c, $44 c, $44 c, $38 c,   -- p
    $38 c, $44 c, $44 c, $44 c, $FC c,   -- q
    $44 c, $78 c, $44 c, $04 c, $08 c,   -- r
    $08 c, $54 c, $54 c, $54 c, $20 c,   -- s
    $04 c, $3E c, $44 c, $24 c, $00 c,   -- t
    $3C c, $40 c, $20 c, $7C c, $00 c,   -- u
    $1C c, $20 c, $40 c, $20 c, $1C c,   -- v
    $3C c, $60 c, $30 c, $60 c, $3C c,   -- w
    $6C c, $10 c, $10 c, $6C c, $00 c,   -- x
    $9C c, $A0 c, $60 c, $3C c, $00 c,   -- y
    $64 c, $54 c, $54 c, $4C c, $00 c,   -- z
    $08 c, $3E c, $41 c, $41 c, $00 c,   -- {
    $00 c, $00 c, $77 c, $00 c, $00 c,   -- |
    $00 c, $41 c, $41 c, $3E c, $08 c,   -- }
    $02 c, $01 c, $02 c, $01 c, $00 c,   -- ~

comment ===
 Example

NVM
#require FONT5X8

VARIABLE pEMIT  --  pointer to TX!

-- put a pixel as "#" or " "
: pixel ( c -- )
   IF 35 ELSE 32 THEN
   pEMIT @ EXECUTE ;

-- next column for pixels
: column ( -- )
   10 pEMIT @ EXECUTE ; 

-- simulate 8 pixel output to a matrix dispay
: put8 ( c -- )
   7 FOR
      DUP 128 AND ( f ) pixel
      2*
   NEXT 
   DROP column ;

 -- render a character as a series of 8bit columns
: render ( c -- )
   DUP 33 128 WITHIN IF
      ( c ) 33 - 5 * FONT5X8 + ( a )
      0 put8
      4 FOR 
         DUP C@ put8
         1+
      NEXT DROP
   ELSE
      DROP 5 FOR 
         0 put8
      NEXT
   THEN ;

-- redirect console output and print a string
: test5x8 ( -- )
    -- use old console EMIT vector for pixels 
   'EMIT @ pEMIT !
   [ ' render ] LITERAL 'EMIT !
   ." ABCdef"
   pEMIT @ 'EMIT ! ;
RAM

 the example produces the following
test5x8<enter>
 ###### 
   #   #
   #   #
   #   #
 ###### 
        
 #######
 #  #  #
 #  #  #
 #  #  #
  ## ## 
        
  ##### 
 #     #
 #     #
 #     #
  #   # 
        
  ###   
 #   #  
 #   #  
 #   #  
 #######
        
  ###   
 # # #  
 # # #  
 # # #  
    #   
        
    #   
 ###### 
    #  #
    #  #
        
 ok
===

.then
